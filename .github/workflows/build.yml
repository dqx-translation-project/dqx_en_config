---
name: "build"

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
    name: "Build executable"
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout dqx-translation-project/dqx_translations
        uses: actions/checkout@v4
        with:
          repository: 'dqx-translation-project/dqx_translations'
          path: 'dqx_translations'

      - name: Checkout dqx-translation-project/dqx_dat_dump
        uses: actions/checkout@v4
        with:
          repository: 'dqx-translation-project/dqx_dat_dump'
          path: 'dqx_dat_dump'

      - name: Install Python
        uses: actions/setup-python@v1
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: pip install -r dqx_dat_dump/requirements.txt

      - name: Port translations to new ETP
        working-directory: dqx_dat_dump/tools/packing
        run: |
          python pack_etp.py -j ${{ github.workspace }}/dqx_translations/json/_lang/en/eventTextEtcWindowsconfigtoolsClient.win32.json -e ${{ github.workspace }}/assets/ETP/ETP193.bin
          python pack_etp.py -j ${{ github.workspace }}/dqx_translations/json/_lang/en/eventTextEtcWindowsgamepadmousesClient.win32.json -e ${{ github.workspace }}/assets/ETP/ETP247.bin

      - name: Move new ETPs to assets
        working-directory: assets/ETP
        run: |
          Remove-Item ${{ github.workspace }}/assets/ETP/*.bin -Force
          Move-Item ${{ github.workspace }}/dqx_dat_dump/tools/packing/new_etp/*.bin .

      - name: Build launcher exe
        working-directory: app
        run: |
          & .\port_assets.bat
          cat DQXConfig.log

      - name: Create release on tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app/DQXConfig.exe
          prerelease: false
          draft: false
          tag_name: ${{ github.ref }}
          name: 'Release: ${{ github.ref_name }}'
          generate_release_notes: true
          fail_on_unmatched_files: true
